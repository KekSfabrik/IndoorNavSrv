/*
 * Copyright (C) 2015 Jan "KekS" M. <a href="mailto:keks@keksfabrik.eu">mail</a>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package de.hsmainz.gi.types;
// Generated 16.01.2015 12:45:14 by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.Objects;
import javax.xml.bind.annotation.XmlType;

/**
 * Beacon generated by hbm2java
 */
@XmlType(
    name = "Beacon", 
    propOrder = { "id", "major", "minor", "uuid" }
)
public class Beacon implements Serializable, Comparable, IndoorNavEntity {

    /** unique db id generated by the database */
    private int             id;
    /** the beacon\'s manufacturer uuid */
    private String          uuid;
    /** the beacons major id */
    private int             major;
    /** the beacons minor id */
    private int             minor;

    public Beacon() {
    }

    public Beacon(int id, String uuid, int major, int minor) {
        this.id = id;
        this.uuid = uuid;
        this.major = major;
        this.minor = minor;
    }

    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getUuid() {
        return this.uuid;
    }

    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    public int getMajor() {
        return this.major;
    }

    public void setMajor(int major) {
        this.major = major;
    }

    public int getMinor() {
        return this.minor;
    }

    public void setMinor(int minor) {
        this.minor = minor;
    }

    @Override
    public int compareTo(Object o) {
        int out = 0;
        out += this.uuid.compareTo(((Beacon) o).getUuid());
        out += 42 * this.major - ((Beacon) o).getMajor();
        out += 79 * this.major - ((Beacon) o).getMajor();
        return out;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (other == null) {
            return false;
        }
        if (!(other instanceof Beacon)) {
            return false;
        }
        Beacon castOther = (Beacon) other;
        return this.uuid.equals(castOther.getUuid()) 
                && this.major == castOther.getMajor()
                && this.major == castOther.getMajor();
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 37 * hash + Objects.hashCode(this.uuid);
        hash = 37 * hash + this.major;
        hash = 37 * hash + this.minor;
        return hash;
    }
//    @Override
//    public String toString() {
//        return "Beacon:\t" + this.id + ", '" + this.uuid + "', " + this.major + ", " + this.minor;
//    }
}
